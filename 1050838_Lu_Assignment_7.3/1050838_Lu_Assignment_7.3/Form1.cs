using System;using System.Collections.Generic;using System.ComponentModel;using System.Data;using System.Drawing;using System.Linq;using System.Text;using System.Threading.Tasks;using System.Windows.Forms;namespace _1050838_Lu_Assignment_7._3{    public partial class Form1 : Form    {        /*         *          * Programmed by Steven Lu         *          * Date: 3/3/2019         *          *          */        const float twentyTwo = 95.00f / 1f;        const float twentyFour = 137.00f / 1f;        const float thirty = 160.00f / 1f;        const float thirtyTwo = 192.00f / 1f;        const float thirtySix = 250.00f / 1f;        const float thirtyEight = 400.00f / 1f;        const float fourtyFive = 550.00f / 1f;        float rate;        float totaltotal = 0.0f;        float count = 0.0f;        float countCharters = 0.0f;        float totalHours = 0.0f;        public Form1()        {            InitializeComponent();        }        private void printSummaryToolStripMenuItem_Click(object sender, EventArgs e)        {            printPreviewDialogSum.Document = printDocumentSum;            printPreviewDialogSum.ShowDialog();        }        private void printYachtTypesToolStripMenuItem_Click(object sender, EventArgs e)        {            printPreviewDialogYacht.Document = printDocumentYacht;            printPreviewDialogYacht.ShowDialog();        }        private void exitToolStripMenuItem_Click(object sender, EventArgs e)        {            this.Close();        }        private void clearToolStripMenuItem_Click(object sender, EventArgs e)        {            nameBox.Text = "";            hoursBox.Text = "";        }        private void addYachtToolStripMenuItem_Click(object sender, EventArgs e)        {            String newYacht = type.Text;            bool isNewYacht = true;            foreach (String yacht in type.Items)            {                if (yacht == newYacht)                {                    isNewYacht = false;                    break;                }            }            if (isNewYacht)            {                type.Items.Add(type.Text);            }            count++;        }        private void removeYachtToolStripMenuItem_Click(object sender, EventArgs e)        {            type.Items.RemoveAt(type.SelectedIndex);        }        private void displayNumberOfTypesToolStripMenuItem_Click(object sender, EventArgs e)        {            richBox.Text = type.Items.Count.ToString();        }        private void aboutToolStripMenuItem_Click(object sender, EventArgs e)        {            MessageBox.Show("Programmed by Steven Lu.");        }        private void buttonOK_Click(object sender, EventArgs e)        {            String yacht = type.Text;            float size = float.Parse(this.size.Text);            float currentHours = float.Parse(hoursBox.Text);            float currentPrice;                        switch (size)            {                case 22:                    rate = twentyTwo;                    break;                case 24:                    rate = twentyFour;                    break;                case 30:                    rate = thirty;                    break;                case 32:                    rate = thirtyTwo;                    break;                case 36:                    rate = thirtySix;                    break;                case 38:                    rate = thirtyEight;                    break;                case 45:                    rate = fourtyFive;                    break;                default:                    MessageBox.Show("Check those inputs.");                    break;            }                                  currentPrice = rate * currentHours;            totaltotal += currentPrice;            countCharters++;            totalHours += currentHours;            priceBox.Text = currentPrice.ToString();        }        private void buttonClear_Click(object sender, EventArgs e)        {            nameBox.Text = "";            hoursBox.Text = "";        }        private void printDocumentYacht_PrintPage(object sender, System.Drawing.Printing.PrintPageEventArgs e)        {            Font printFont = new Font("Times New Roman", 12);            Font headingFont = new Font("Times New Roman", 12);            float vertFloat = e.MarginBounds.Top;            float horiFloat = e.MarginBounds.Left;            float lineFloat = printFont.GetHeight();            e.Graphics.DrawString("Programmed by Steven Lu",                                 headingFont,                                 Brushes.Black,                                 horiFloat,                                 vertFloat);            vertFloat += 2 * lineFloat;            e.Graphics.DrawString("Yacht Types: ",                                  headingFont,                                  Brushes.Black,                                  horiFloat,                                  vertFloat);            vertFloat += 2 * lineFloat;            foreach (String s in type.Items)            {                e.Graphics.DrawString(s,                                  headingFont,                                  Brushes.Blue,                                  horiFloat,                                  vertFloat);                vertFloat += 2 * lineFloat;            }        }        private void printPreviewDialogSum_Load(object sender, EventArgs e)        {        }        private void printDocumentSum_PrintPage(object sender, System.Drawing.Printing.PrintPageEventArgs e)        {            Font printFont = new Font("Times New Roman", 12);            Font headingFont = new Font("Times New Roman", 12);            float vertFloat = e.MarginBounds.Top;            float horiFloat = e.MarginBounds.Left;            float lineFloat = printFont.GetHeight();            e.Graphics.DrawString("Programmed by Steven Lu",                                  headingFont,                                  Brushes.Black,                                  horiFloat,                                  vertFloat);            vertFloat += 2 * lineFloat;            e.Graphics.DrawString("Charters: " + countCharters.ToString(),                                  headingFont,                                  Brushes.Black,                                  horiFloat,                                  vertFloat);            vertFloat += 2 * lineFloat;            e.Graphics.DrawString("Revenue: " + totaltotal.ToString(),                                  headingFont,                                  Brushes.Black,                                  horiFloat,                                  vertFloat);            vertFloat += 2 * lineFloat;            e.Graphics.DrawString("Avg Hours: " + (totalHours / countCharters).ToString(),                                  headingFont,                                  Brushes.Black,                                  horiFloat,                                  vertFloat);            vertFloat += 2 * lineFloat;        }    }}